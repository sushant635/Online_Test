[{"D:\\Online_Test\\forntend\\src\\index.js":"1","D:\\Online_Test\\forntend\\src\\App.js":"2","D:\\Online_Test\\forntend\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":2898,"mtime":1609962196286,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ltydj4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"D:\\Online_Test\\forntend\\src\\index.js",[],["16","17"],"D:\\Online_Test\\forntend\\src\\App.js",["18","19","20"],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport $ from 'jquery';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n    };\n    this.getanswers = this.getanswers.bind(this);\n  }\n  componentDidMount() {\n    fetch(\"http://127.0.0.1:8000/api/Objective/\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          isLoaded: true,\n          items: data,\n        });\n      });\n     \n  }\n \n  getanswers(){\n    document.getElementById(\"UserAnswers\").innerHTML = \"\";\n    var e = document.getElementsByTagName('input');\n    for (var  i = 0; i < e.length; i++) {\n    if (e[i].type == \"radio\") {\n        if (e[i].checked) {\n        document.getElementById(\"UserAnswers\").innerHTML += \"Q\" + e[i].name + \"Answer you selected is :\" + e[i].value + \"<br/>\";\n        }\n    }\n  }\n}\n  render() {\n    var self = this;\n    var { isLoaded, items } = this.state;\n    if (!isLoaded) {\n      return <div>Loading..</div>;\n    }\n    else{\n        console.log(items)\n        $(document).ready(function(){\n          $(\"#but1\").click(function(){\n              $(\".rb\").show();\n              $(\".rb\").attr(\"disabled\",true)\n          })\n      });\n      \n    \n      return(\n        \n        <div className='container'>\n           <h1 className=\"text-center\">Online Test</h1>\n          {items.map(items => (\n            <div className=\"jumbotron\">\n             \n            <table>\n              <tbody>\n                \n              <tr>\n                <td key={items.key} >{items.id}) {items.question} ?</td>\n              </tr>\n              <tr>\n                <td><input type=\"radio\" id=\"option1\" name=\"{ items.id }\"  className=\"rb\" value=\"{ items.option1 }\"/> {items.option1} </td>\n              </tr>\n              <tr>\n                <td><input type=\"radio\" id=\"option1\" name=\"{ items.id }\"   className=\"rb\" value=\"{ items.option2 }\"/> {items.option2} </td>\n              </tr>\n              <tr>\n                <td><input type=\"radio\" id=\"option1\" name=\"{ items.id }\"   className=\"rb\" value=\"{ items.option3 }\"/> {items.option3} </td>\n              </tr>\n              <tr>\n                <td><input type=\"radio\" id=\"option1\" name=\"{ items.id }\"   className=\"rb\" value=\"{ items.option4 }\"/> {items.option4} </td>\n              </tr>\n              <tr>\n                <td><label  id=\"correct_ans\"   className=\"rb\"><b>{ items.correct_ans }</b></label></td>\n              </tr>\n                \n              </tbody>\n            \n            </table>\n            <hr/>\n            </div>\n           \n          ))}\n          \n          <input type=\"Submit\" id=\"but1\" value=\"Submit\" className=\"btn btn-primary\" onClick='{() => self.getanswers}'></input>\n          <b id=\"UserAnswers\"></b>\n        </div>\n        \n        \n       \n       );\n    }\n  }\n}\n\nexport default App;\n","D:\\Online_Test\\forntend\\src\\reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":1,"column":8,"nodeType":"27","messageId":"28","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"30","line":30,"column":19,"nodeType":"31","messageId":"32","endLine":30,"endColumn":21},{"ruleId":"25","severity":1,"message":"33","line":38,"column":9,"nodeType":"27","messageId":"28","endLine":38,"endColumn":13},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'self' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]